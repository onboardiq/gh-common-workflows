name: 'Merge stable to master'
description: 'Create a PR and automerge stable into master'
inputs:
  github-automation-token:
    description: "A Github oauth token with sufficent permissions to make, approve, and merge PRs"
    required: true
  gh-token:
    description: "A second authorized token"
    required: true
  sha:
    description: "The target SHA to merge into master"
    required: true
runs:
  using: 'composite'
  steps:
    - name: 'Add masks'
      shell: bash
      run: |
        echo "::add-mask::${{ inputs.github-automation-token }}"
        echo "::add-mask::${{ inputs.gh-token }}"
        
    - name: "Get current date"
      id: date
      shell: bash
      run: echo "::set-output name=now::$(TZ=America/Los_Angeles date +'%Y-%m-%d')"

    - name: "Create merge stable with master branch"
      uses: peterjgrainger/action-create-branch@v2.1.0
      env:
        GITHUB_TOKEN: ${{ inputs.github-automation-token }}
      with:
        # Adding date to prevent branch naming conflict (even though they should be deleted)
        branch: "merge-master-with-stable-${{ steps.date.outputs.now }}"
        sha: ${{ inputs.sha }}

    - name: 'Merge stable to master on success'
      id: create-pr
      uses: repo-sync/pull-request@v2
      with:
        # kicked of by fountain machine user so downstream github
        # actions can run for this PR
        github_token: ${{ inputs.github-automation-token }}
        pr_body: "Automated merge of master with stable"
        source_branch: "merge-master-with-stable-${{ steps.date.outputs.now }}"
        destination_branch: "master"
        pr_title: "Merge release back to master"
        pr_allow_empty: true
        pr_label: "automerge"

    # The github bot approves the PR to satisfy the
    # branch protection rule
    - name: 'Approve the PR'
      uses: actions/github-script@v4
      if: ${{ steps.create-pr.outputs.pr_number != null }}
      with:
        github-token: ${{ inputs.gh-token }}
        script: |
          await github.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ steps.create-pr.outputs.pr_number }},
            event: "APPROVE",
          })
