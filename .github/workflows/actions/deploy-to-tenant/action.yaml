name: 'Deploy to Tenant'
description: "Deploy via Helm to a Tenant"
inputs:
  helm-version:
    description: 'The version of Helm to use'
    required: true
  chart-version:
    description: 'The base version of the chart with the format X.Y.Z'
    required: true
  region:
    description: "The region the tenant is in"
    required: true
  cloud:
    description: "The cloud service the tenant is in"
    required: true
  eks-suffix:
    description: "A suffix to differentiate tenants in the same region"
    required: true
  tenant-name:
    description: "The name of the tenant"
    required: true
  namespace:
    description: "The kubernetes namespace the tenant is in"
    required: true
  stage:
    description: "One of 'stage' or 'prod'"
    required: true
  dry-run:
    description: "When true, only does a dry run of the deployment"
    required: true
  aws-access-key-id:
    description: "An AWS Access Key ID with sufficient permissions to read from EKS clusters"
    required: true
  aws-secret-access-key:
    description: "An AWS Secret Access Key matching the given access key id"
    required: true
  
runs:
  using: 'composite'
  steps:
    - name: 'Add masks'
      shell: bash
      run: |
        echo "::add-mask::${{ inputs.aws-access-key-id }}"
        echo "::add-mask::${{ inputs.aws-secret-access-key }}"

    - uses: actions/checkout@v2
      with:
        repository: onboardiq/gh-common-workflows
        path: ./common-workflows
        
    - name: 'Install Kubectl'
      id: install-kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: v1.19.0

    - name: 'Install and Setup Helm'
      uses: Azure/setup-helm@v2.0
      with:
        version: ${{ inputs.helm-version }}
        
    # GITHUB_RUN_ID is the unique identifier (id) within a repo
    - name: 'Set the KUBECONFIG'
      shell: bash
      run: |
        echo KUBECONFIG=${RUNNER_TEMP}/kubeconfig_${GITHUB_RUN_ID} >> $GITHUB_ENV

    - name: 'Get the kubeconfig'
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        AWS_DEFAULT_REGION: ${{ inputs.region }}
      shell: bash
      run: |
        aws eks update-kubeconfig \
          --name eng-${{ inputs.region }}-${{ inputs.stage }}-application-cluster${{ inputs.eks-suffix }} \
          --alias aws-${{ inputs.region }}-${{ inputs.stage }} \
          --kubeconfig ${KUBECONFIG} \
          --region ${{ inputs.region }}

    - id: version
      uses: ./common-workflows/.github/workflows/actions/version
      with:
        base-charts-version: ${{ inputs.chart-version }}

    - name: 'Deployment Dry Run'
      if: ${{ inputs.dry-run }}
      env:
        CLOUD: ${{ inputs.cloud }}
        REGION: ${{ inputs.region }}
        TENANT: ${{ inputs.tenant-name }}
        NAMESPACE: ${{ inputs.namespace }}
        CLUSTER_SUFFIX: ${{ inputs.eks-suffix }}
        CHART_VERSION: ${{ steps.version.outputs.chart_version }}
        IMAGE_TAG: ${{ steps.version.outputs.image_tag }}
      shell: bash
      run: |
        kubectl config use-context aws-${{ inputs.region }}-${{ inputs.stage }}
        make -C helm test

    - name: 'Deployment'
      if: ${{ inputs.dry-run }}
      env:
        CLOUD: ${{ inputs.cloud }}
        REGION: ${{ inputs.region }}
        TENANT: ${{ inputs.tenant-name }}
        CLUSTER_SUFFIX: ${{ inputs.eks-suffix }}
        NAMESPACE: ${{ inputs.namespace }}
        CHART_VERSION: ${{ inputs.chart-version }}
        IMAGE_TAG: ${{ inputs.image-tag }}
      shell: bash
      run: |
        kubectl config use-context aws-${{ inputs.region }}-${{ inputs.stage }}
        make -C helm install
