name: 'Helm Rollback'
description: Rollback to the previous helm release

inputs:
  region:
    description: "The AWS region the release is in"
    required: true
  eks-suffix:
    description: "An optional suffix to append to the cluster name"
    required: true
  tenant-name:
    description: "A human-readable name for the tenant"
    required: true
  namespace:
    description: "The K8s namespace the release is in"
    required: true
  stage:
    description: "One of stage or prod"
    required: true
  dry-run:
    description: "When true, only does a dry run of the rollback"
    required: true
  project-name:
    description: "The name of the project"
    required: true
  aws-access-key-id:
    description: "An AWS Access Key ID with sufficient permissions to read from EKS clusters"
    required: true
  aws-secret-access-key:
    description: "An AWS Secret Access Key matching the given access key id"
    required: true
  gh_pat:
    description: "A GitHub personal access token"
    required: true
  helm-version:
    description: 'The version of Helm to use'
    required: true


runs:
  using: 'composite'
  steps:
    - name: 'Add masks'
      shell: bash
      run: |
        echo "::add-mask::${{ inputs.aws-access-key-id }}"
        echo "::add-mask::${{ inputs.aws-secret-access-key }}"
        echo "::add-mask::${{ inputs.gh_pat }}"

    - name: 'Install and Setup Helm'
      uses: Azure/setup-helm@v3
      with:
        version: ${{ inputs.helm-version }}
        token: ${{ inputs.gh_pat }}

      # GITHUB_RUN_ID is the unique identifier (id) within a repo
    - name: 'Set the KUBECONFIG'
      shell: bash
      run: |
        echo KUBECONFIG=${RUNNER_TEMP}/kubeconfig_${GITHUB_RUN_ID} >> $GITHUB_ENV

    - name: "Configure AWS credentials"
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.region }}

    - name: 'Get the kubeconfig'
      shell: bash
      run: |
        aws eks update-kubeconfig \
          --name eng-${{ inputs.region }}-${{ inputs.stage }}-application-cluster${{ inputs.eks-suffix }} \
          --alias aws-${{ inputs.region }}-${{ inputs.stage }} \
          --kubeconfig ${KUBECONFIG} \
          --region ${{ inputs.region }}

    - name: 'Rollback Dry Run'
      if: ${{ inputs.dry-run }}
      shell: bash
      run: |
        helm rollback ${{ inputs.project-name }} 0 \
          -n ${{ inputs.namespace }} \
          --wait \
          --timeout 10m0s \
          --dry-run;
        helm -n ${{ inputs.namespace }} history ${{ inputs.project-name }} --max 2;

    - name: 'Rollback'
      if: ${{ inputs.dry-run != 'true' }}
      shell: bash
      run: |
        helm rollback ${{ inputs.project-name }} 0 \
          -n ${{ inputs.namespace }} \
          --wait \
          --timeout 10m0s;
