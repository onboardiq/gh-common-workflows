name: Deploy

on:
  workflow_dispatch:
    inputs:
      env:
        description: An env to deploy to
        required: true
        type: string
      projects:
        description: A JSON string mapping selected projects to branches to deploy
        required: true
        type: string
      tenant_matrix:
        description: A JSON string of tenants to be deployed to
        required: true
        type: string
      dry-run:
        description: Whether to do a dry-run of each deploy
        type: boolean
        required: true
        default: true

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  KUBERNETES_EXEC_INFO: '{"kind":"ExecCredential","apiVersion":"client.authentication.k8s.io/v1beta1","spec":{"interactive":true}}'
  TZ: America/Los_Angeles

jobs:
  deploy-project:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJSON(inputs.projects) }}
        tenant: ${{ fromJSON(inputs.tenant_matrix) }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: onboardiq/${{ matrix.project.project }}
          fetch-depth: 1

      - uses: actions/checkout@v3
        with:
          repository: onboardiq/gh-common-workflows
          path: ./common-workflows
          fetch-depth: 1
          ref: ${{ matrix.project.branch }}

      - name: "Get commit sha"
        id: commit-sha
        shell: bash
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Deploy job for ${{ matrix.tenant.name }} -- ${{ matrix.project.project }}
        uses: ./common-workflows/.github/workflows/actions/deploy-to-tenant
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-account-id: ${{ secrets.aws-account-id }}
          chart-version: 1.0.0
          cloud: ${{ matrix.tenant.cluster.cloud }}
          commit-sha: ${{ steps.commit-sha.outputs.sha }}
          doppler-token: ${{ secrets.doppler-token }}
          dry-run: ${{ inputs.dry-run }}
          eks-suffix: ${{ matrix.tenant.cluster.cluster-suffix }}
          env: ${{ inputs.env }}
          helm-version: 3.4.1
          namespace: ${{ matrix.tenant.namespace }}
          region: ${{ matrix.tenant.cluster.region }}
          ref: ${{ matrix.projects.branch }}
          context: ${{ matrix.tenant.cluster.stage }}
          tenant-name: ${{ matrix.tenant.name }}
          include_faut_reset_cronjob: ${{ matrix.tenant.include_faut_reset_cronjob }}
          gh_pat: ${{ secrets.github-automation-token }}
          helm_repo_username: ${{ secrets.helm-repo-username }}
          helm_repo_password: ${{ secrets.helm-repo-password }}
          project-name: ${{ matrix.projects.project }}
