name: Release cut

on:
  workflow_call:
    inputs:
      project-name:
        description: 'The name of the project'
        required: true
        type: string
      main-branch:
        description: 'The name of the main branch of the repo'
        required: true
        type: string
      release-branch:
        description: 'The name of the branch representing the currently deployed release'
        required: true
        type: string
    secrets:
      github-automation-token:
        description: "A github user token with sufficent permissions to create, approve, and merge PRs"
        required: true
      slack-webhook-url:
        description: 'The URL of the Slack Webhook to post the message to'
        required: true
      notion-database-id:
        description: 'The ID of the notion database to post update to'
        required: true
      notion-secret:
        description: 'Secret token allowing working with notion'
        required: true

jobs:
  gather-facts:
    name: Gather Facts
    runs-on: ubuntu-latest
    outputs:
      open-release: ${{ steps.open-release.outputs.result }}
      unmerged-commits: ${{ steps.unmerged-commits.outputs.result }}
      changed-files: ${{ steps.changed-files.outputs.result }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Need all repo to compare

      - name: Set changed files
        id: changed-files
        env:
          FROM: ${{ inputs.main-branch }}
          TO: ${{ inputs.release-branch }}
        shell: bash
        run: |
          echo "## Changed files check" >> $GITHUB_STEP_SUMMARY;

          changed=$(git diff --name-only origin/$FROM..origin/$TO);

          if [[ $changed = '' ]]; then
            echo "::set-output name=result::failed";
            echo "**FAILED**: No files changed" >> $GITHUB_STEP_SUMMARY;
          else
            echo "::set-output name=result::passed";
            echo "**PASSED**" >> $GITHUB_STEP_SUMMARY;
          fi

      - name: Set open release
        id: open-release
        env:
          GITHUB_TOKEN: ${{ secrets.github-automation-token }}
        shell: bash
        run: |
          echo "## Open PR Check" >> $GITHUB_STEP_SUMMARY;

          open_pr=$(gh pr list --base stable --search 'release/' --json headRefName -q '.[].headRefName');
          if [[ $open_pr != '' ]]; then
            echo "::set-output name=result::failed";
            echo "**FAILED**: PR open at $open_pr" >> $GITHUB_STEP_SUMMARY;
          else
            echo "::set-output name=result::passed";
            echo "**PASSED**" >> $GITHUB_STEP_SUMMARY;
          fi

      - name: Set unmerged commits
        id: unmerged-commits
        env:
          FROM: ${{ inputs.main-branch }}
          TO: ${{ inputs.release-branch }}
        shell: bash
        run: |
          echo "## Unmerged commits check" >> $GITHUB_STEP_SUMMARY;
          echo "Comparing $FROM..$TO" >> $GITHUB_STEP_SUMMARY;

          unmerged=$(git log --format=oneline origin/$FROM..origin/$TO --);
          if [[ $unmerged != '' ]]; then
            echo "::set-output name=result::failed";
            echo "**FAILED**: Unmerged commits present" >> $GITHUB_STEP_SUMMARY;
          else
            echo "::set-output name=result::passed";
            echo "**PASSED**" >> $GITHUB_STEP_SUMMARY;
          fi


  create-release-branch:
    needs: gather-facts
    if: >-
      needs.gather-facts.outputs.changed-files == 'passed'
      && needs.gather-facts.outputs.open-release == 'passed'
      && needs.gather-facts.outputs.unmerged-commits == 'passed'
    name: "Create Release branch"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get main branch sha
        id: sha
        env:
          MAIN: ${{ inputs.main-branch }}
        run: |
          sha=$(git rev-parse ${MAIN});
          echo "::set-output name=result::${sha}";

      - name: "Get current date"
        id: date
        shell: bash
        run: echo "::set-output name=now::$(TZ=America/Los_Angeles date +'%Y-%m-%d')"

      - name: "Create release branch"
        env:
          GITHUB_TOKEN: ${{ secrets.github-automation-token }}
          BRANCH: "release/${{ steps.date.outputs.now }}"
          SHA:  ${{ steps.sha.outputs.result }}
        shell: bash
        run: |
          git checkout -b ${BRANCH} ${SHA}
          git push -u origin ${BRANCH}
        
      # - name: "Create release branch"
      #   uses: peterjgrainger/action-create-branch@v2.2.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.github-automation-token }}
      #   with:
      #     branch: "release/${{ steps.date.outputs.now }}"
      #     sha:  ${{ steps.sha.outputs.result }}
          
      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: ${{ inputs.release-branch }}
          source_branch: "release/${{ steps.date.outputs.now }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: "Release ${{ steps.date.outputs.now }}"

      - name: Add to summary
        env:
          BRANCH: release/${{ steps.date.outputs.now }}
        shell: bash
        run: echo "### Cut release branch $BRANCH" >> $GITHUB_STEP_SUMMARY


  post-release-cut-skip-to-notion:
    name: Post release cut skip event status to Notion
    runs-on: ubuntu-latest
    needs: gather-facts
    if: >-
      needs.gather-facts.outputs.changed-files == 'failed'
      || needs.gather-facts.outputs.open-release == 'failed'
      || needs.gather-facts.outputs.unmerged-commits == 'failed'
    steps:
      - name: checkout the private repository
        id: checkout_notion_action
        uses: actions/checkout@v3
        with:
          repository: onboardiq/gh-action-post-release-status-to-notion
          path: ./action
          token: ${{ secrets.github-automation-token }}
          fetch-depth: 0

      - name: run the action
        uses: ./action
        with:
          database-id: ${{ secrets.notion-database-id }}
          notion-secret: ${{ secrets.notion-secret }}
          repo: ${{ inputs.project-name }}
          sha: ${{ github.sha }}
          status: release branch cut skipped
          body: >-
            changed-files: ${{ needs.gather-facts.outputs.changed-files }},
            open-release: ${{ needs.gather-facts.outputs.open-release }},
            unmerged-commits: ${{ needs.gather-facts.outputs.unmerged-commits }},

  post-release-cut-skip-message-to-slack:
    name: Post a skipped message to the release status slack channel.
    runs-on: ubuntu-latest
    needs:
      - post-release-cut-skip-to-notion
      - gather-facts
    steps:
      - name: checkout the action
        id: checkout_slack_action
        uses: actions/checkout@v3
        with:
          repository: onboardiq/gh-action-post-message-to-slack
          token: ${{ secrets.github-automation-token }}
          path: ./action
          fetch-depth: 0

      - name: run the action
        uses: ./action
        with:
          slack_webhook_url: ${{ secrets.slack-webhook-url }}
          message: >-
            ${{ inputs.project-name }} RC branch has been skipped.
            Check for changed files: **${{ needs.gather-facts.outputs.changed-files }}**,
            Check for open PR: **${{ needs.gather-facts.outputs.open-release }}**,
            Check for unmerged commits: **${{ needs.gather-facts.outputs.unmerged-commits }}**,

  post-release-cut-to-notion:
    name: Post release event status to Notion
    runs-on: ubuntu-latest
    needs: create-release-branch
    steps:
      - name: checkout the private repository
        id: checkout_notion_action
        uses: actions/checkout@v3
        with:
          repository: onboardiq/gh-action-post-release-status-to-notion
          token: ${{ secrets.github-automation-token }}
          path: ./action
          fetch-depth: 0

      - name: run the action
        uses: ./action
        with:
          database-id: ${{ secrets.notion-database-id }}
          notion-secret: ${{ secrets.notion-secret }}
          repo: ${{ inputs.project-name }}
          sha: ${{ github.sha }}
          status: release branch cut

  post-release-cut-message-to-slack:
    name: Post a success message to the release status slack channel.
    runs-on: ubuntu-latest
    needs: post-release-cut-to-notion
    steps:
      - name: checkout the action
        id: checkout_slack_action
        uses: actions/checkout@v3
        with:
          repository: onboardiq/gh-action-post-message-to-slack
          token: ${{ secrets.github-automation-token }}
          path: ./action
          fetch-depth: 0

      - name: run the action
        uses: ./action
        with:
          message: ${{ inputs.project-name }} RC branch has been cut.
          slack_webhook_url: ${{ secrets.slack-webhook-url }}
