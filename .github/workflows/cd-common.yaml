name: CD

on:
  workflow_call:
    inputs:
      project-name:
        description: 'The name of the project'
        required: true
        type: string
      helm-version:
        description: "The version of Helm to use"
        required: true
        type: string
      helm-chart-version:
        description: 'The base version of the chart to deploy, in the format X.Y.Z'
        required: true
        type: string
      env:
        description: 'The environment to deploy to, one of "all", "prod", "dev", "uat"'
        required: true
        type: string
      ref:
        description: "The branch or tag name or SHA to check out"
        required: true
        type: string
      dry-run:
        description: "When true, only does a dry run of deployment"
        required: true
        type: boolean
      # expected JSON structure:
      # type Tenants = Tenant[];
      # interface Tenant {
      #   name: string;
      #   title: string;
      #   namespace: string;
      #   cluster: Cluster;
      #   envs: Environment[];
      #   projects: Project[];
      #   include_faut_reset_cronjob?: number;
      # }
      # 
      # interface Cluster {
      #   region: string;
      #   cloud: string;
      #   eks_suffix: string;
      #   stage: Stage;
      # }
      # 
      # type Stage = 'prod' | 'stage';
      # 
      # type Environment = 'prod' | 'uat' | 'dev';
      # 
      # type Project = 'monolith'
      tenants:
        description: "A JSON string representing a list of tenant data"
        required: true
        type: string
      message_for_slack:
        description: "The message to post on successful deployment"
        type: string
        required: true

    secrets:
      aws-access-key-id:
        description: "An AWS Access Key ID with sufficient access to push to ECR repos"
        required: true
      aws-secret-access-key:
        description: "An AWS Secret Access Key matching the given AWS Access Key ID"
        required: true
      aws-account-id:
        description: "An AWS Account ID to form ECR URLs from"
        required: true
      helm-repo-username:
        description: "A username with sufficient permissions to push to helm repositories (usually in chartmuseum)"
        required: true
      helm-repo-password:
        description: "A password matching the given helm repo username"
        required: true
      github-automation-token:
        description: "A github user token with sufficent permissions to create, approve, and merge PRs"
        required: true
      slack-webhook-url:
        description: 'The URL of the Slack Webhook to post the message to'
        required: true
      notion-database-id:
        description: 'The ID of the notion database to post update to'
        required: true
      notion-secret:
        description: 'Secret token allowing working with notion'
        required: true

jobs:
  deploy-env:
    runs-on: ubuntu-latest
    outputs:
      notes: ${{ steps.release_info.outputs.notes }}
      tag: ${{ steps.release_info.outputs.tag }}
      commit-sha: ${{ steps.commit-sha.outputs.sha }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      - name: 'Get the commit sha'
        id: commit-sha
        shell: bash
        run: echo "::set-output name=sha::$(git rev-parse HEAD)"

  deploy:
    needs:
      - deploy-env
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJSON(inputs.tenants) }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: onboardiq/gh-common-workflows
          path: ./common-workflows

      - name: Deploy job for ${{ matrix.name }}
        uses: ./common-workflows/.github/workflows/actions/deploy-to-tenant
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-account-id: ${{ secrets.aws-account-id }}
          chart-version: ${{ inputs.helm-chart-version }}
          cloud: ${{ matrix.cluster.cloud }}
          commit-sha: ${{ needs.deploy-env.outputs.commit-sha }}
          dry-run: ${{ inputs.dry-run }}
          eks-suffix: ${{ matrix.cluster.cluster-suffix }}
          helm-version: ${{ inputs.helm-version }}
          namespace: ${{ matrix.namespace }}
          region: ${{ matrix.cluster.region }}
          ref: ${{ inputs.ref }}
          context: ${{ matrix.cluster.stage }}
          tenant-name: ${{ matrix.name }}
          include_faut_reset_cronjob: ${{ matrix.include_faut_reset_cronjob }}
          gh_pat: ${{ secrets.github-automation-token }}
          helm_repo_username: ${{ secrets.helm-repo-username }}
          helm_repo_password: ${{ secrets.helm-repo-password }}
          project-name: ${{ inputs.project-name }}

  release:
    needs:
      - deploy
      - deploy-env
    runs-on: ubuntu-latest
    if: ${{ inputs.env == 'prod' && success() }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: onboardiq/gh-common-workflows
          path: ./common-workflows

      - uses: ./common-workflows/.github/workflows/actions/create-github-release
        with:
          github-automation-token: ${{ secrets.github-automation-token }}
          sha: ${{ needs.deploy-env.outputs.commit-sha }}
      - uses: ./common-workflows/.github/workflows/actions/merge-stable-to-master
        with:
          sha: ${{ needs.deploy-env.outputs.commit-sha }}
          github-automation-token: ${{ secrets.github-automation-token }}
          gh-token: ${{ secrets.GITHUB_TOKEN }}

  post-deploy:
    needs:
      - deploy
      - deploy-env
      - release
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout common workflows and actions"
        uses: actions/checkout@v3
        with:
          repository: onboardiq/gh-common-workflows
          path: ./common-workflows
      - name: "Post message to Slack"
        uses: ./common-workflows/.github/workflows/actions/notify-slack-pipeline-status
        with:
          slack_webhook_url: ${{ secrets.slack-webhook-url }}
          gh_automation_token: ${{ secrets.github-automation-token }}
          environment: ${{ inputs.env }}
          message: ${{ inputs.message_for_slack }}

      - name: "Post data row to Notion"
        uses: ./common-workflows/.github/workflows/actions/notify-notion
        with:
          database-id: ${{ secrets.notion-database-id }}
          notion-secret: ${{ secrets.notion-secret }}
          repo: ${{ inputs.project-name }}
          sha: ${{ needs.deploy-env.outputs.commit-sha }}
          status: "${{ inputs.project-name }} deployed to ${{ inputs.env }}"
          gh_automation_token: ${{ secrets.github-automation-token }}
